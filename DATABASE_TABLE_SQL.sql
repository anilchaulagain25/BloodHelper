USE [BLOOD_HELP]
GO
/****** Object:  Table [dbo].[TBL_HOSPITAL]    Script Date: 07/10/2018 22:29:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL_HOSPITAL](
	[HOSPITAL_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[HOSPITAL_NAME] [nvarchar](200) NOT NULL,
	[HOSPITAL_USERNAME] [varchar](50) NOT NULL,
	[PASSWORD] [nvarchar](max) NOT NULL,
	[CREATED_DATE] [datetime] NOT NULL,
	[CONTACT_NO] [varchar](100) NOT NULL,
	[WEBSITE] [varchar](200) NULL,
	[EMAIL] [varchar](200) NOT NULL,
	[LOCATION] [varchar](500) NULL,
	[IS_ACTIVE] [bit] NOT NULL,
	[CREATED_IP] [varchar](50) NULL,
PRIMARY KEY CLUSTERED 
(
	[HOSPITAL_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
UNIQUE NONCLUSTERED 
(
	[HOSPITAL_NAME] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
UNIQUE NONCLUSTERED 
(
	[EMAIL] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
UNIQUE NONCLUSTERED 
(
	[HOSPITAL_USERNAME] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL_HOSPITAL_BLOOD_INFO]    Script Date: 07/10/2018 22:29:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL_HOSPITAL_BLOOD_INFO](
	[BLOOD_INFO_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[HOSPITAL_ID] [bigint] NOT NULL,
	[BLOOD_GROUP] [varchar](5) NOT NULL,
	[AMOUNT] [decimal](5, 2) NOT NULL,
	[UNIT] [varchar](10) NOT NULL,
	[AVAILABLE_LOCATION] [varchar](500) NULL,
	[CONTACT_NO] [varchar](50) NULL,
	[BLOOD_PROPERTY_ONE] [varchar](10) NULL,
	[BLOOD_PROPERTY_TWO] [varchar](10) NULL,
	[BLOOD_PROPERTY_THREE] [varchar](10) NULL,
	[CREATED_DATE] [datetime] NOT NULL,
	[IS_ACTIVE] [bit] NOT NULL,
	[LATITUDE] [decimal](9, 6) NULL,
	[LONGITUDE] [decimal](9, 6) NULL,
PRIMARY KEY CLUSTERED 
(
	[BLOOD_INFO_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL_REQUEST_BLOOD_HIST]    Script Date: 07/10/2018 22:29:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL_REQUEST_BLOOD_HIST](
	[BLOOD_REQUEST_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[BLOOD_INFO_ID] [bigint] NOT NULL,
	[USER_ID] [bigint] NOT NULL,
	[AMOUNT] [decimal](5, 2) NOT NULL,
	[CREATED_DATE] [datetime] NOT NULL,
	[IS_ACTIVE] [bit] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[BLOOD_REQUEST_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL_USER]    Script Date: 07/10/2018 22:29:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL_USER](
	[USER_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[USERNAME] [varchar](50) NOT NULL,
	[PASSWORD] [nvarchar](max) NOT NULL,
	[CREATED_DATE] [datetime] NOT NULL,
	[LOCATION] [varchar](500) NULL,
	[IS_ACTIVE] [bit] NOT NULL,
	[CONTACT_NO] [varchar](10) NULL,
	[CREATED_IP] [varchar](50) NULL,
	[FULL_NAME] [nvarchar](200) NOT NULL,
	[EMAIL] [varchar](100) NULL,
PRIMARY KEY CLUSTERED 
(
	[USER_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
UNIQUE NONCLUSTERED 
(
	[EMAIL] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
UNIQUE NONCLUSTERED 
(
	[USERNAME] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE [dbo].[TBL_HOSPITAL] ADD  DEFAULT (getdate()) FOR [CREATED_DATE]
GO
ALTER TABLE [dbo].[TBL_HOSPITAL] ADD  DEFAULT ((0)) FOR [IS_ACTIVE]
GO
ALTER TABLE [dbo].[TBL_HOSPITAL_BLOOD_INFO] ADD  DEFAULT (getdate()) FOR [CREATED_DATE]
GO
ALTER TABLE [dbo].[TBL_HOSPITAL_BLOOD_INFO] ADD  DEFAULT ((0)) FOR [IS_ACTIVE]
GO
ALTER TABLE [dbo].[TBL_REQUEST_BLOOD_HIST] ADD  DEFAULT ((0)) FOR [IS_ACTIVE]
GO
ALTER TABLE [dbo].[TBL_USER] ADD  DEFAULT (getdate()) FOR [CREATED_DATE]
GO
ALTER TABLE [dbo].[TBL_USER] ADD  DEFAULT ((0)) FOR [IS_ACTIVE]
GO
ALTER TABLE [dbo].[TBL_HOSPITAL_BLOOD_INFO]  WITH CHECK ADD FOREIGN KEY([HOSPITAL_ID])
REFERENCES [dbo].[TBL_HOSPITAL] ([HOSPITAL_ID])
GO
ALTER TABLE [dbo].[TBL_HOSPITAL_BLOOD_INFO]  WITH CHECK ADD FOREIGN KEY([HOSPITAL_ID])
REFERENCES [dbo].[TBL_HOSPITAL] ([HOSPITAL_ID])
GO
ALTER TABLE [dbo].[TBL_REQUEST_BLOOD_HIST]  WITH CHECK ADD FOREIGN KEY([BLOOD_INFO_ID])
REFERENCES [dbo].[TBL_HOSPITAL_BLOOD_INFO] ([BLOOD_INFO_ID])
GO
ALTER TABLE [dbo].[TBL_REQUEST_BLOOD_HIST]  WITH CHECK ADD FOREIGN KEY([BLOOD_INFO_ID])
REFERENCES [dbo].[TBL_HOSPITAL_BLOOD_INFO] ([BLOOD_INFO_ID])
GO
ALTER TABLE [dbo].[TBL_REQUEST_BLOOD_HIST]  WITH CHECK ADD FOREIGN KEY([USER_ID])
REFERENCES [dbo].[TBL_USER] ([USER_ID])
GO
ALTER TABLE [dbo].[TBL_REQUEST_BLOOD_HIST]  WITH CHECK ADD FOREIGN KEY([USER_ID])
REFERENCES [dbo].[TBL_USER] ([USER_ID])
GO
/****** Object:  StoredProcedure [dbo].[PROC_CREATE_UPDATE_HOPITAL]    Script Date: 07/10/2018 22:29:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[PROC_CREATE_UPDATE_HOPITAL](
@MODE CHAR(1),
@HOSPITAL_ID BIGINT,
@HOSPITAL_NAME NVARCHAR(200),
@HOSPITAL_USERNAME VARCHAR(50),
@PASSWORD NVARCHAR(MAX) ,
@CONTACT_NO VARCHAR(100),
@WEBSITE VARCHAR(200) ,
@EMAIL VARCHAR(200) ,
@LOCATION VARCHAR(500) ,
@CREATED_IP VARCHAR(50) 
)
AS 
BEGIN
	SET NOCOUNT ON;
	SET XACT_ABORT ON;
	IF @MODE='I'
	BEGIN
		IF EXISTS (SELECT TOP 1 1 FROM TBL_HOSPITAL WHERE HOSPITAL_NAME=@HOSPITAL_NAME)
		BEGIN
			RAISERROR('HOSPITAL NAME ALREADY EXISTS',16,1);
			RETURN;
		END
		ELSE IF EXISTS (SELECT TOP 1 1 FROM TBL_HOSPITAL WHERE HOSPITAL_USERNAME=@HOSPITAL_USERNAME)
		BEGIN
			RAISERROR('HOSPITAL USER NAME ALREADY EXISTS',16,1);
			RETURN;
		END
		ELSE IF EXISTS (SELECT TOP 1 1 FROM TBL_HOSPITAL WHERE EMAIL=@EMAIL AND @EMAIL<>'') 
		BEGIN
			RAISERROR('HOSPITAL EMAIL ALREADY EXISTS',16,1);
			RETURN;
		END
		ELSE BEGIN
			INSERT INTO TBL_HOSPITAL(HOSPITAL_NAME,HOSPITAL_USERNAME,[PASSWORD],CONTACT_NO,WEBSITE,EMAIL,[LOCATION],CREATED_IP,CREATED_DATE,IS_ACTIVE)
			VALUES(@HOSPITAL_NAME,@HOSPITAL_USERNAME,@PASSWORD,@CONTACT_NO,@WEBSITE,@EMAIL,@LOCATION,@CREATED_IP,GETDATE(),1)
		END
	END
	ELSE IF @MODE='U'
	BEGIN

		IF NOT EXISTS(SELECT TOP 1 1 FROM  TBL_HOSPITAL WHERE HOSPITAL_ID=@HOSPITAL_ID)
		BEGIN
			RAISERROR('HOSPITAL ID IS NOT VALID',16,1);
			RETURN;
		END
		IF EXISTS (SELECT TOP 1 1 FROM TBL_HOSPITAL WHERE HOSPITAL_NAME=@HOSPITAL_NAME AND HOSPITAL_ID<>@HOSPITAL_ID)
		BEGIN
			RAISERROR('HOSPITAL NAME ALREADY EXISTS',16,1);
			RETURN;
		END
		ELSE IF EXISTS (SELECT TOP 1 1 FROM TBL_HOSPITAL WHERE HOSPITAL_USERNAME=@HOSPITAL_USERNAME AND HOSPITAL_ID<>@HOSPITAL_ID)
		BEGIN
			RAISERROR('HOSPITAL USER NAME ALREADY EXISTS',16,1);
			RETURN;
		END
		ELSE IF EXISTS (SELECT TOP 1 1 FROM TBL_HOSPITAL WHERE EMAIL=@EMAIL AND @EMAIL<>'' AND  HOSPITAL_ID<>@HOSPITAL_ID) 
		BEGIN
			RAISERROR('HOSPITAL EMAIL ALREADY EXISTS',16,1);
			RETURN;
		END
		ELSE BEGIN
			UPDATE  TBL_HOSPITAL
				SET HOSPITAL_NAME=@HOSPITAL_NAME,
					HOSPITAL_USERNAME=@HOSPITAL_USERNAME,
					[PASSWORD]=@PASSWORD,
					CONTACT_NO=@CONTACT_NO,
					WEBSITE=@WEBSITE,
					EMAIL=@EMAIL,
					[LOCATION]=@LOCATION,
					CREATED_IP=@CREATED_IP
			  WHERE HOSPITAL_ID=@HOSPITAL_ID
		END
	END
	ELSE 
	BEGIN
		RAISERROR('MODE IS NOT DEFINED',16,1);
		RETURN;
	END
END
GO
/****** Object:  StoredProcedure [dbo].[PROC_CREATE_UPDATE_USER]    Script Date: 07/10/2018 22:29:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[PROC_CREATE_UPDATE_USER](
@MODE CHAR(1),
@USER_ID BIGINT,
@USERNAME NVARCHAR(50),
@PASSWORD VARCHAR(200),
@LOCATION VARCHAR(500),
@CONTACT_NO VARCHAR(20),
@EMAIL VARCHAR(100),
@FULL_NAME NVARCHAR(200),
@CREATED_IP VARCHAR(50) 
)
AS 
BEGIN
	SET NOCOUNT ON;
	SET XACT_ABORT ON;
	IF @MODE='I'
	BEGIN
		IF EXISTS (SELECT TOP 1 1 FROM TBL_USER WHERE USERNAME=@USERNAME)
		BEGIN
			RAISERROR('USER NAME ALREADY EXISTS',16,1);
			RETURN;
		END
		ELSE IF EXISTS (SELECT TOP 1 1 FROM TBL_USER WHERE [EMAIL]=@EMAIL)
		BEGIN
			RAISERROR('EMAIL ALREADY EXISTS',16,1);
			RETURN;
		END
		ELSE BEGIN
			INSERT INTO TBL_USER(FULL_NAME,USERNAME,[PASSWORD],CONTACT_NO,EMAIL,[LOCATION],CREATED_IP,CREATED_DATE,IS_ACTIVE)
			VALUES(@FULL_NAME,@USERNAME,@PASSWORD,@CONTACT_NO,@EMAIL,@LOCATION,@CREATED_IP,GETDATE(),1)
		END
	END
	ELSE IF @MODE='U'
	BEGIN

		IF NOT EXISTS(SELECT TOP 1 1 FROM  TBL_USER WHERE USER_ID=@USER_ID)
		BEGIN
			RAISERROR('USER ID IS NOT VALID',16,1);
			RETURN;
		END
		IF EXISTS (SELECT TOP 1 1 FROM TBL_USER WHERE USERNAME=@USERNAME AND USER_ID<>@USER_ID)
		BEGIN
			RAISERROR('USER NAME ALREADY EXISTS',16,1);
			RETURN;
		END
		ELSE IF EXISTS (SELECT TOP 1 1 FROM TBL_USER WHERE EMAIL=@EMAIL AND @EMAIL<>'' AND  USER_ID<>@USER_ID) 
		BEGIN
			RAISERROR('USER EMAIL ALREADY EXISTS',16,1);
			RETURN;
		END
		ELSE BEGIN
			UPDATE  TBL_USER
				SET FULL_NAME=@FULL_NAME,
					USERNAME=@USERNAME,
					[PASSWORD]=@PASSWORD,
					CONTACT_NO=@CONTACT_NO,
					EMAIL=@EMAIL,
					[LOCATION]=@LOCATION,
					CREATED_IP=@CREATED_IP
			  WHERE USER_ID=@USER_ID
		END
	END
	ELSE 
	BEGIN
		RAISERROR('MODE IS NOT DEFINED',16,1);
		RETURN;
	END
END
GO
